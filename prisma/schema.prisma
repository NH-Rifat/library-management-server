// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id        String   @id @unique @default(cuid())
  title     String
  genre     String
  publishedYear Int
  totalCopies    Int
  availableCopies Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  BorrowedBook BorrowedBook[]

  @@map("books")
}

model Member {
  memberId        String   @id @unique @default(cuid())
  name      String
  email     String
  phone     String
  membershipDate   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  BorrowedBook BorrowedBook[]

  @@map("members")
}

model BorrowedBook {
  borrowId        String   @id @unique @default(cuid())
  borrowDate    DateTime @default(now())
  returnDate  DateTime?
  bookId       String 
  memberId     String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Book Book @relation(fields: [bookId], references: [id])
  Member Member @relation(fields: [memberId], references: [memberId])
  ReturnBook ReturnBook?

  @@map("borrowedBooks")
}

model ReturnBook {
  returnId        String   @id @unique @default(cuid())
  returnDate    DateTime @default(now())
  borrowId       String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  BorrowedBook BorrowedBook @relation(fields: [borrowId], references: [borrowId])

  @@map("returnBooks")
}